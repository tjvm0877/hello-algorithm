# ---------- 기본 선언 방법 ----------
list01 = []  # 빈 리스트 생성
list02 = [1, 2, 3]
# list03 = ['A','B','C',]  # 마지막 원소 뒤에 쉼표 입력 가능
list04 = list()  # python 내장함수 list를 이용하여 빈 리스트 생성
list05 = list("ABC")  # 문자열의 각 문자로부터 원소 생성
list06 = list([1, 2, 3])  # 리스트로부터 원소 생성
list07 = list((1, 2, 3))  # 튜플로부터 원소 생성
list08 = list({1, 2, 3})  # 집합으로부터 원소 생성

# range()를 사용한 정수형 범위 리스트 생성
list09 = list(range(7))
list10 = list(range(3, 8))
list11 = list(range(3, 13, 2))

# 리스트의 원소 개수는 만들기 전에 결정해야하지만 원솟값을 정하지 않은 경우
list12 = [None] * 5


# ---------- 언팩(unpack) ----------
x = [1, 2, 3]  # 리스트 생성
a, b, c = x  # x를 언팩하여 a, b, c에 대입
print(a, b, c)  # 1 2 3


# ---------- 원소 접근 - 인덱스 ----------
x = [11, 22, 33, 44, 55, 66, 77]
print(x)
print(f"x[2] = {x[2]}")
print(f"x[-3] = {x[-3]}")

# Pylancer 경고 발생
# int형에서 float로 자동 형변환, 이때 값 자체가 복사되는 것이 아니라 x[-4]가 참조하는 객체의 식별 번호가 변경됨
x[-4] = 3.14

print(x[-4])
print(f"x = {x}")

# x[7] # 존재하지 않는 인덱스이므로 오류 출력
# x[7] # 존재하지 않는 인덱스에는 값을 대입할 수 없음으로 오류를 출력

# ---------- 원소 접근 - 슬라이스 ----------
# s[i:j] - s[i]부터 s[j-1]까지 나열
# s[i:j:k] - s[i]부터 s[j-1]까지 k씩 건너뛰며 나열
# i,j가 len(s)보다 크면 len(s)가 지정된 것으로 간주, 인덱스와 달리 범위에서 벗어나는 지정해도 오류가 발생 안함
# i가 없거난 None이면 0이 지정된 것으로 간주
# j가 없거나 None이면 len(s)가 지정된 것으로 간주
s = [11, 22, 33, 44, 55, 66, 77]
print(f"s = {s}")
print(f"s[0:6] = {s[0:6]}")  # 0번째 원소부터 5번째 원소를 출력
print(f"s[0:7] = {s[0:7]}")  # 0번째 원소부터 6번째 원소를 출력
print(f"s[0:7:2] = {s[0:7:2]}")  # 0번째 원소부터 6번째 원소 중 2씩 건너뛰며 원소를 출력
print(f"s[-4:-2] = {s[-4:-2]}")  # 뒤에서 4번째 원소부터 뒤에서 3번째 원소를 출력
print(f"s[3:1] = {s[3:1]}")  # j값(1)이 i값(3)보다 작지만 오류가 나지 않음
