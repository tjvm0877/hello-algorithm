# ---------- 기본 선언 방법 ----------
tuple01 = ()
# tuple02 = 1,
tuple03 = (1,)
tuple04 = 1, 2, 3
# tuple05 = 1,2,3,
tuple06 = (1, 2, 3)
# tuple07 = (1,2,3,)
# tuple08 = 'A', 'B', 'C',

tuple09 = tuple()  # 빈 튜플
tuple10 = tuple("ABC")  # 문자열의 각 문자로부터 원소를 생성
tuple11 = tuple([1, 2, 3])  # 리스트로부터 원소 생성
tuple12 = tuple({1, 2, 3})  # 집합으로부터 원소 생성

# range()함수가 생성하는 수열을 tuple생성
tuple13 = tuple(range(7))
tuple14 = tuple(range(3, 8))
tuple15 = tuple(range(3, 12, 2))

# 언팩
x = (1, 2, 3)
a, b, c = x
print(a, b, c)

# ---------- 원소 접근 - 인덱스 ----------
x = (11, 22, 33, 44, 55, 66, 77)
print(x)
print(f"x[2] = {x[2]}")
print(f"x[-3] = {x[-3]}")

print(x[-4])
print(f"x = {x}")

# x[7] # 존재하지 않는 인덱스이므로 오류 출력
# x[7] # 존재하지 않는 인덱스에는 값을 대입할 수 없음으로 오류를 출력

# ---------- 원소 접근 - 슬라이스 ----------
# s[i:j] - s[i]부터 s[j-1]까지 나열
# s[i:j:k] - s[i]부터 s[j-1]까지 k씩 건너뛰며 나열
# i,j가 len(s)보다 크면 len(s)가 지정된 것으로 간주, 인덱스와 달리 범위에서 벗어나는 지정해도 오류가 발생 안함
# i가 없거난 None이면 0이 지정된 것으로 간주
# j가 없거나 None이면 len(s)가 지정된 것으로 간주
s = (11, 22, 33, 44, 55, 66, 77)
print(f"s = {s}")
print(f"s[0:6] = {s[0:6]}")  # 0번째 원소부터 5번째 원소를 출력
print(f"s[0:7] = {s[0:7]}")  # 0번째 원소부터 6번째 원소를 출력
print(f"s[0:7:2] = {s[0:7:2]}")  # 0번째 원소부터 6번째 원소 중 2씩 건너뛰며 원소를 출력
print(f"s[-4:-2] = {s[-4:-2]}")  # 뒤에서 4번째 원소부터 뒤에서 3번째 원소를 출력
print(f"s[3:1] = {s[3:1]}")  # j값(1)이 i값(3)보다 작지만 오류가 나지 않음
